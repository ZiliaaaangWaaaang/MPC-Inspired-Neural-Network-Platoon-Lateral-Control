function [Y,Xf,Af] = nnmove_05(X,~,~)
%NNMOVE_05 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:22.
% 
% [Y] = nnmove_05(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.647616379060142;-2.37366072205907;-0.510991349439703;-1.76682920600066];
x1_step1.gain = [1.58326877892889;0.517745986015106;2.12314366372446;0.519634118677897];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.9834171465836414328;-2.2769066481509150357;1.8802401078053392336;-1.0623301259285971021;-0.081748984919889911005;0.13318954277996322699;1.114708695318374021;1.173388476444174211;2.0270564635775065732;-3.100394612187670873];
IW1_1 = [-1.4554188821131652798 -0.056764260448048775576 -1.2932034449139377941 -0.92030220387826411343;0.35934216665346768727 2.5114304414003516541 1.588252704827295636 0.78714296924680815515;-0.59508802320465681301 -0.62309562354634140391 0.59163071917064757876 -1.6980599631295389962;0.77253051879685963321 -1.8882327621515599958 1.058783831793671526 -0.10583330346147222512;-0.63866380325065008616 -2.0510896393914026525 -1.427034761843684274 -0.83893244765599694901;-1.9042366523971892001 0.18561537789056578585 1.1026134000884124653 0.10212683355081313141;0.86465599091987588309 1.9627601967336949507 1.8263737612900521334 0.83889655463026613358;1.460356467265884195 -0.4897265348948264263 1.2847138600143672704 0.56367261361492848604;1.58646441764300139 -0.28101424681893039104 -0.23509302598487014091 -1.4366656007498384007;0.39983854897446902132 -0.0023220053633034760943 -0.30205296999694664084 -2.5107594381638569381];

% Layer 2
b2 = [-1.7143531849554030089;-1.5048530323470623582;-0.94688051961846009252;0.68270207788072112542;-0.132705821045183886;0.26491514731739573829;0.55855407703493376026;1.0769740644750072089;-1.3143872399134761686;1.9916969088239444563];
LW2_1 = [0.57839993685308455085 -0.64674682126978011443 -0.38135095041709488051 0.31493768601534027907 -0.27082262704808113263 0.11443007002134572558 -0.46644065507544585358 0.49851821787157640786 -1.6827488480747827548 -0.55297556688444771122;-0.056296712365370024655 -0.44952816095498532301 -0.31972798439129179737 0.75800550384418874383 -1.5196784977173551923 -0.084686794493561548536 0.92095758366715574361 0.38030748116711127205 -0.60268242596309684611 0.55542906454722218434;0.58834957564361312077 -0.072170176398916943694 0.79105949238759853959 -0.26391481070493960637 -0.77273802671739288961 0.63111604511436314446 -0.82906468115020226506 0.74007243663656552268 0.42332966330675331212 -0.57107802421361475442;-0.42445503203430728911 -0.95630467172916810981 -0.53871447239592062939 0.6988427679329416442 0.08960168478343302767 -0.33655711818317513018 0.90755988999401715489 -0.042180967862489801568 -0.62174807981040580707 0.3911724321173578045;-0.9858027726794540424 0.45844161081931983359 -0.44352816847734083394 -0.19946654511062031356 -0.80570254817711017825 -0.56131418139587752059 -0.97944437656755878319 -0.53447803141709926411 -0.36864705150148591173 -0.073256945753361432661;0.50519128911032162854 1.2558183913548253141 -0.4985731120284939144 -0.0083393331839978768194 -0.35061206688302293255 -0.10154250624003190173 1.2309398557008337516 -0.20436468418139236425 -0.50757429366412554206 -0.61178004972967792163;0.57293231444323355905 0.31848655299750000536 0.71808495589532794767 0.60824092764327142291 0.013758004629104324951 -0.65679651369261671245 0.69247423786501571819 -0.62275918005981123482 0.98089662160078183728 -0.56480195989854642402;0.93268305252141003869 0.6737022806488557336 0.020276863080873810258 0.83260424063336246903 0.10024196001915247622 -0.064169826793930143105 0.4602039617685298456 -0.45918771163947785796 0.46735066162028371384 -0.83662994277464319826;-0.77927489069316790982 -0.92571919129893254219 0.18883463044035403433 -0.2552395074638691419 0.63137695255920567305 0.40287680094829786404 0.79376616309148562145 -0.097789331465126097531 -0.42811682477627965859 0.036886282774883163982;0.59931386030002697929 -0.43781231673484460876 -0.41431809050238660452 0.46141397589611765628 0.3652548498428715984 1.0796046249037205556 0.016132818945304990693 0.38088401148706907406 -0.2273361682814959428 0.26394530665428006522];

% Layer 3
b3 = -0.093152788959985494133;
LW3_2 = [-0.50139181415910805129 -0.74597264842998822765 -0.39599583234991736491 0.60816066634913357181 -0.52496033031050182149 -0.89588189640489956922 -0.72007892847838128603 -0.2663047770514632151 0.17888971222281024875 0.44915271858158622997];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
