function [Y,Xf,Af] = nnmove_03(X,~,~)
%NNMOVE_03 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:21.
% 
% [Y] = nnmove_03(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.610326261839229;-2.37366072205907;-0.510991349439703;-1.48150311532898];
x1_step1.gain = [1.63142878368426;0.572531224440494;2.18196721536666;0.56124031446153];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.6921485010182926167;-1.7061525753402495553;-0.41445168996796921679;1.4820213979175136387;0.48150999211854500492;0.11834866271414221095;1.6687893224063641284;-1.3423585517008198575;-2.0900086695360178268;-1.8451670778536013451];
IW1_1 = [0.93259708590498202607 1.4980473600512593801 -0.7642067080444895355 1.3971556717901829625;0.99273228172642380418 0.0056496474539375184792 -2.0053493811980480643 1.0914812861238636366;0.6025530578702937845 1.6375178653096023051 0.6013492295085960393 0.66740824407894827619;-0.86183711708624854975 0.44293360952114152473 2.0229181634725756922 0.54810424149621794765;1.2591954141134837908 1.1179951063163802161 -0.63948579499080426825 -0.94299345214973440132;1.5728644479422535518 0.61916068802164891949 -1.0239651102021292139 0.26254085369343338474;0.15999754519081066384 1.9440949437762056196 1.3320451082717423841 0.99006242719594073076;-0.93952635385269689383 -0.96891057810470226919 0.43626747192656273322 1.8785325496846909665;-1.127209997596960056 1.5174761304798369821 0.86265115169825601349 0.068011723757762959641;-0.14265872728975242945 1.4654661158313970759 2.0715236175081903625 0.42914811112786555025];

% Layer 2
b2 = [1.7942622784125328295;-1.3661382891756717051;-1.0030549788135449951;-0.79927661347837530847;-0.22684904717506024219;0.32852845671199532029;0.64151118246109917198;0.82497240527113069319;-1.3418691078455966537;1.8741208971755094481];
LW2_1 = [-0.065451163989392283082 -0.93089391071566751634 0.23676776647532715714 0.78443284037313376622 -0.21294472557129345835 -0.25495018372356681446 0.89907064634670863512 -0.56514201589741475118 0.2225957489514477361 -0.14658703662752009533;0.81198604725903156254 -0.0064504358823231459918 0.35968397894902232048 0.39367931585562804253 -0.35777517459122742949 1.1909974420560354158 -0.34178714555861755553 -0.47517095442052886822 -0.047279213401344465095 -0.49996027707695167575;0.53401434160560379283 0.27888890071805344517 -1.2044576982631900464 -0.024075416124941656504 0.60891832000980194994 -0.57443906665787569654 -0.34148241373697618695 0.57560276215527428345 0.26325850566509623185 -1.2247923970655962833;0.10815159306594789024 0.33188985187072705951 -0.10006747649215502749 0.43425314616773869059 -0.024030637511187644823 -0.72790609837530051429 0.48042674041843674848 -1.0109731556009211584 -0.43417869682233867223 0.20040149074535021367;0.21620080136003094751 0.80729136267602719101 0.23555133025396737811 0.21870261705608151637 0.75440585054447739655 -0.26387441297756414338 -0.33446895947228311163 0.89237577574588944351 -0.14306500103506114563 0.78587188286659404035;-0.11128978679754761294 0.98632402422394316321 0.34009319257305647977 0.50643522406548457937 -0.081409198265531890204 0.14364092098259403918 -0.52240952378138238998 -0.26141340565996235012 -0.21380795388994089379 1.2941373597839129772;0.70749550578272313306 1.0210204662298183464 0.70127675107349374262 0.52596163179267796384 0.063598611154509238075 -0.48758847995385556917 -0.38300086422374041151 -0.14282223166054780483 -0.075563096682939839832 -0.25813933428200136477;0.57884395563834845078 -0.53659049086738008771 -0.3801259426213364212 0.33235657582539301913 0.68990995744799510359 -0.91114265064388177962 -0.11052299996681905214 -0.73527938720682861629 0.2018603604934354756 -0.068187791916630532962;-0.084107019698993784607 -0.37451587849810946684 0.30021377699276557971 0.63292057661378542388 0.17029638301259669708 -0.70708291852926807852 0.38828707220011260404 -0.6247812040836009384 -0.75656547436492838088 0.99252825414706646878;0.57607633027782412238 -0.67934954213594733741 0.57314502649236864773 -0.2751700720258753452 0.65377912735584697845 -0.22483510753670754578 0.011513731762582517237 -0.40632354485573485281 0.64394974658721593208 -0.71613844127198711398];

% Layer 3
b3 = 0.88562481188034791746;
LW3_2 = [-0.34208289775865197146 0.036436233543735388474 0.68563155251570218063 1.3585792097742086515 0.48381391344887697548 -0.47785046021849764131 -0.87141311916119146286 -0.69656019891289755464 -0.95651981007152186987 0.19704985787917173035];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
