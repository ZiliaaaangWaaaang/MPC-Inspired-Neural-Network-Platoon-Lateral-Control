function [Y,Xf,Af] = nnmove_01(X,~,~)
%NNMOVE_01 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:20.
% 
% [Y] = nnmove_01(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.610326261839229;-2.37366072205907;-0.510991349439703;-1.48150311532898];
x1_step1.gain = [1.93999781692857;0.572531224440494;2.18196721536666;0.56124031446153];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.6827294634749052626;-1.8545016332331578646;-1.5246222402213163161;-0.81834446035058128199;-0.15742649734512281778;0.0721522281455140857;-0.55461332272967744927;-1.0706361076078407812;1.9654481504066909636;2.8138997738443496388];
IW1_1 = [-1.1426792859726764284 1.5053408083299613107 -1.3159715184145857059 0.78109153479537729581;0.80747206028197893168 0.81931400238834350969 -1.5938981974542145714 1.1614911222468526919;-0.17244089525587585898 0.41590466075817894565 2.1615345694606520333 0.33654342768483197501;0.14282342880918474926 0.011147784540561983188 -1.4941633208496394314 -1.9474650586498447602;-1.6955102750130623956 0.50478429573778349493 -0.829176417336525029 -0.88171809542357837408;-0.32747254778436712952 -1.7304858957338307146 -1.0898607968249471867 -0.94451270137746057287;-0.98631278594607563193 -1.1813477311206683762 -0.58652391048625796 1.8578918654990654868;-0.96316271641026618422 -1.6083938105180453082 -1.4267380724630887023 -0.77105675347177105028;0.91781991265157858439 -0.9272980701587268948 1.9977002493154489837 -0.0787618832765307475;1.7020434151196055517 1.4955784536951552965 0.52394942779062092519 0.6149175668468960243];

% Layer 2
b2 = [2.0927189374820529544;1.4908935969590653148;1.0803870819014798066;0.62094301548843566785;-0.33804271656649720335;-0.21407753761630815559;0.67769504089223930876;-1.0198903454105061606;1.4071157408695618152;-1.5978290393297613914];
LW2_1 = [-0.14524232322432406583 0.86931400361069588456 0.25450783999025672344 -0.32938256512373964568 0.49381195182260539944 0.77452783330508401249 0.47983883922259307209 -0.85779680259627666405 0.01562150129281679109 -0.44832549120325737579;-0.67706098015955318292 -0.31379016348501481692 -0.50239350415619365986 -0.008771458891782088485 -0.14478229460654440386 0.62061018670110279505 -0.12528022211618489168 1.2105593510572758564 0.3766136482808182806 -0.11653532781502154436;-0.47823484482724260003 -0.10507229946375107321 0.55707794292839984962 0.11470781227111134792 0.18938928826796322391 0.10591814179644204463 -0.10291659970822431003 -0.79711839248760196774 1.0716675098943799771 0.008606679805240689124;-0.16272728144773895842 0.23334113890477251041 -0.44005469684175518852 0.39415562841225604274 -0.68026112290919715786 0.81307783207236072887 0.026890869464291741742 -0.64318299730370120937 -0.96814554933089047584 -0.092327739459878821471;0.27373883186644398791 0.54746728877285899539 -0.73208171997431104039 -0.45012817268329191611 -0.15344517976448673879 -0.62809427839518494618 0.60731416136081839419 0.89184319867834993545 0.10796163782448424395 -1.0896728023195061397;-0.12461886708159387871 -0.46587808916521744607 0.23261306632820269447 0.5387938427179651546 0.81423191457367583013 0.2917919886973773802 0.69700842379029526175 0.54992987209006882754 -0.60309860922943703265 -0.60948920157284003363;0.27881735861089501638 -0.73428428584479121799 -0.82006736781606603959 -0.097232300182757372409 0.64863107102405992421 0.40155219633555622183 -0.012279592574837426555 0.24966304099526492877 0.7111361818181293204 0.94750380512705822955;-0.37609544377332604359 0.85694721812263985328 -0.71029986436862802002 -0.6258746278151552378 -0.52575411905090940756 -0.084909390024312761391 0.43108588955483156946 0.14834727531402439049 -0.77740768585994257656 -0.4434859553253098774;0.53015517353458530003 0.29749870946076734102 0.46702930778010914858 0.73342055291696783836 1.1102650969632379407 -0.72104793280197299055 -0.095776361223833761382 -0.64521756231438209817 -0.28373184314516419757 0.53881106431827485714;-0.11672065751538604483 -0.38870768428563368113 -0.020310921683519458925 0.69396381412799346133 -0.43130294368057164878 -0.68271305965781681202 1.0536818034739050542 0.16816931750901153997 -0.2727950193689941405 1.0271560115658875389];

% Layer 3
b3 = 0.21029170029612798132;
LW3_2 = [0.66735430946766405302 0.98487367087509680719 -0.58857765861632826976 0.29828643159477691293 0.56468406853369790266 0.16108615308855384063 -0.56294325368839781554 0.0653017060664818072 0.66152820494543063123 -0.41248853419737324666];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
