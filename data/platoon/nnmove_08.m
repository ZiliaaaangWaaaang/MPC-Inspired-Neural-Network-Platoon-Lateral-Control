function [Y,Xf,Af] = nnmove_08(X,~,~)
%NNMOVE_08 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:24.
% 
% [Y] = nnmove_08(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.692826738054503;-2.37366072205907;-0.510991349439703;-1.97100986088565];
x1_step1.gain = [1.52856145008017;0.474936694026657;1.8804872999334;0.493456443199078];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.5996378377683440064;1.3230991493061108333;1.2832327648295820399;0.087758791267682378923;0.69137836761971649402;0.57002819961164408191;-0.36853441955722021639;-0.46840128618118170856;1.8028254287731759753;-2.3430014737175168804];
IW1_1 = [0.21640289838933779443 -1.288740593608883378 1.8331164921363214404 -0.55739349576861907387;-0.057579635024570925694 -2.6301108872471834488 0.058406595809229203131 -0.16277273874657693931;0.11682936087282699833 2.0300309823695479317 1.0504088449546038486 -0.33520989243299886828;-1.5503409623311235066 1.1171193120125966214 -0.11016865445494933295 -1.1920238763084196609;0.46692290141325970554 -1.4450942609028731844 -1.4024614481619102069 0.23502410110156740641;-1.0695503431501045544 1.8214879860621804308 -1.0701349514084663728 0.72428557979505314712;-0.84228427475081846243 -0.47041070281285934929 -0.71600272586329094526 1.5424402619027341999;-0.60321624262791362359 -1.2777407600875516636 -1.2859135119002065295 -1.0462416462495116587;0.89159850726875322646 1.6121555288656936877 0.092369704102004554502 1.8593696630886500376;-0.67882789366285123389 -0.24884041097039713564 2.0189007722454990201 1.1936724549178192589];

% Layer 2
b2 = [1.6897619001814194739;-1.1707571605110540514;0.83651395079785972886;-0.77460699874863425674;0.65586728463897836505;-0.20318662171064802435;0.35176416988380510009;0.80006426067051361617;0.8825899257509910445;1.7714201042449879697];
LW2_1 = [-0.55400462654568483067 0.5502867065240603095 0.08100932672224735176 0.12670000523186092378 -0.91956345526267768697 -0.49748423133101954408 0.52413422561912348385 -0.71876101476144060864 0.73028989548689959843 -0.19473789398422913788;0.74818014614833583398 0.17841461848346190644 -0.28668080174174276342 0.24467165436997528882 -0.87579514407685910005 -0.68160108147460918282 -0.86350823738230664262 -0.26091680467107103425 -0.75031384479001017596 -0.28704785844306884846;-0.23279584998122437867 -0.0763909925107376514 0.6916721099268615669 0.27645924405819749525 -0.61880584079242795248 -0.10229723381172371732 0.52912879209011709492 0.32546573793601624169 -0.77219351029733185321 1.1586658429491185629;1.0243057266922988013 0.43667266986500014037 -0.31277219921458365715 -0.4767663128901407088 -0.44315182547597503637 0.13740017809931054371 0.22079834034366585538 0.63782646618856353449 -0.79225205553610011933 -0.48167445184735013797;-0.25922662044284905392 0.026660052197113238981 -0.27299831315649403241 0.2535604324267213272 0.07188594150066790478 0.30154680162596275705 -0.74593009573337842877 0.84765370752844881874 0.97782425616412693703 0.088718605355436019888;-0.934216182256980332 1.2106090087095999763 -0.54885730741719618297 -0.38068062001476332679 -0.70499003440254126573 0.93423301706581096671 0.42602999983430878128 -0.7198356810384896054 0.57391396092465651879 -0.2503787749532127016;0.24269230511133454975 -0.14616542916230840232 0.79313378573579440545 -0.5069945050631358141 -1.1829664262254118157 0.065251707836587985456 0.67133580696792649611 0.31498218153431756239 -0.10222829505403441264 -0.43102369861232231463;0.89027049232212207563 -0.41379217718569949458 0.89515695565195119165 0.34541451055129301917 -0.16066054178900907035 -0.028834300662793185127 -0.25188039712097221035 -0.88745433924449990126 0.14867359448291722623 0.50878163934120246292;0.73719811192926776311 -1.0039689946311805002 0.1352575359962374657 -0.1294279690825704543 -0.56446094207819941246 -0.30144057408765123629 -0.2475314521742232321 -1.3263680386086109664 0.54109857667350824695 1.4020217239740317972;0.73224053775530151267 0.047325279466651333504 0.65817934790775445286 -0.5432706999819393312 0.70471007513598482586 -0.48131927590580453336 -0.58822443362022913682 -0.58607205482108082339 -0.54095786478753993265 0.29308035349086880572];

% Layer 3
b3 = 0.98484223115781777125;
LW3_2 = [-0.26242093165049074077 0.65017506826208915083 0.24509467347067989684 -0.3152061411080802622 0.90506724492005008464 -1.1293109787326249815 -0.24996745490325442129 -0.670573427692828683 -0.50632100477585284537 -0.0037957765782829964128];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
