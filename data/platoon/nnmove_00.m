function [Y,Xf,Af] = nnmove_00(X,~,~)
%NNMOVE_00 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:19.
% 
% [Y] = nnmove_00(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.692826738054503;-2.37366072205907;-0.510991349439703;-1.97100986088565];
x1_step1.gain = [1.52856145008017;0.474936694026657;1.8804872999334;0.493456443199078];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.4895911740544915958;1.9363486909312710438;-1.3831062078080509359;0.82986372468483049492;-0.27662124156161016497;-0.27662124156161016497;-0.82986372468483049492;-1.3831062078080509359;-1.9363486909312710438;-2.4895911740544915958];
IW1_1 = [-2.345419902612424945 0.47448898353788571125 0.22892826533155458124 -0.64770498546252874839;-1.4478283722575537862 1.5977738572462347744 0.51011209158212389436 1.1352363513992418387;1.8429370717869326679 -1.1368766469849056477 -0.79606326869430787951 -0.93565053579823276309;-1.2480079381618411904 1.7474186997530813947 -0.63796308363845466438 -1.0863109094006264677;0.91384422730314152084 0.076351751374817339313 -2.0055688672531251093 1.1553427504086228872;-1.0969907790717881024 0.61341335085750836598 -1.6231763193907393639 1.4084381923678406245;-0.96148354242341560472 -1.1931767977792970825 1.7962633080012289089 -0.78954472270325937178;-0.0089991373195452920714 -1.6700098088976189636 -1.282543390155887586 1.3282066556115077471;-2.3045866439675792847 -0.23042016902308393167 0.91314557819459141186 0.004038948787594132811;-2.0557602950715070378 -0.90316419525148139424 0.77549239456342877741 -0.74486227285824724298];

% Layer 2
b2 = [1.7624955765118339723;1.370829892842537312;-0.97916420917324109574;0.58749852550394465744;-0.19583284183464821915;0.19583284183464821915;0.58749852550394465744;0.97916420917324109574;1.370829892842537312;1.7624955765118339723];
LW2_1 = [-0.68205763802371799365 0.38824231858544067109 -0.74443562921378225727 0.43606986753571741477 0.062962364406989629328 0.71943521838036017524 -0.6499939956919834616 -0.12913521785406389952 0.70989014553443730016 -0.53051973747513436752;-0.41224921674154174633 -0.65756904236379398743 -0.71114904958822211523 -0.85758902893146837787 0.19985287052547517916 0.72529479911035066309 -0.60963696371169551202 0.0020342952675401291401 -0.57013271328102343993 -0.012078479326966564539;0.39802252625395051489 0.83779790224199268689 0.1267406552076310311 0.75061742412505250144 -0.19247659683451956436 -0.54721242758197596867 0.28093160907662034775 0.46574536617418366147 0.5343904280353434233 0.86525751302053111047;-0.81255138392262227232 0.44967942000049082596 -0.78130681663853562835 -0.16557482684056229472 -0.71519027507589827408 0.17101883831426453741 0.61863487303635456005 0.50184756172031175225 0.097842558565134823967 -0.64900395969416935227;0.57594448044438795176 0.79973651794003242088 -0.6525687905750505724 -0.57445720189860283167 0.28337667741978123104 -0.1593318030753627379 -0.21733027839754526234 0.032132003343617404623 0.80281203982950255504 0.76209708021856747973;0.19678279307552057342 -0.926785093545735017 0.91097876813777656224 0.38891084106612161531 0.6213298175996495587 0.15756223765239843471 -0.024545612104024561173 0.32779575821555012594 0.20734736115673391144 0.8158924845402419912;0.43420130501936177181 0.45905232643234633594 -0.41579406885388836557 0.76186077412399588749 0.04215116837883260692 0.4572842400350244918 -0.41700272126900056469 -0.67539126620173806081 0.76673487169012066733 -0.72457001459093961504;0.31120750184170958841 -0.24332636861892978364 0.72725679994832026498 -0.41435740559808709182 0.24365391185892443238 0.19923882894230340868 -0.59617834959881643719 -0.60030936276079815972 0.78041798255736161138 0.9087479248619481087;0.88652751773690896542 -0.016923831285804505353 -0.86866040039958247743 0.77280766853489057944 -0.34082920103108427234 -0.16956542281415679096 0.15715265789687582476 -0.030202402820523836097 -0.24168180358928326168 0.8599037176271212557;0.97656622117687075235 0.12612890256010142465 0.067302034145637734674 -0.26635033310787409322 0.19113356065913894577 0.84331847218847211245 0.63176468952843878313 0.26284728909093318938 -0.11260384567623099583 0.9125324537512315981];

% Layer 3
b3 = -0.039280640546973444316;
LW3_2 = [-0.35079897186691577637 -0.59979772720925006446 -0.31129422799175521241 0.5627172020326194346 0.73071730824463432263 0.91722586309956799511 -0.52356726117446616975 0.64150253830564096802 0.5149191558310104444 -0.30455713607487600036];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
