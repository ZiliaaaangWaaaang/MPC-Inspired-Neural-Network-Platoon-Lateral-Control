function [Y,Xf,Af] = nnmove_02(X,~,~)
%NNMOVE_02 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:21.
% 
% [Y] = nnmove_02(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.610326261839229;-2.37366072205907;-0.510991349439703;-1.48150311532898];
x1_step1.gain = [1.63142878368426;0.572531224440494;2.18196721536666;0.56124031446153];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.2084169089494336546;-1.6266397504156082654;-1.6352887564667974996;0.31446926488352383577;-0.18939813312944472901;0.28805600002693726447;-0.46961917411431192138;-1.2381691750302399324;-2.4282875704964737018;-2.577114041839785763];
IW1_1 = [-1.7028243096284896296 1.539414186138838625 -1.3006626699773857769 -0.55964694575385032227;1.5905112420351563696 -1.1639452721704308669 -1.5846048238412546727 -0.24278270485297659409;1.1124251447291559902 1.649624504981642481 0.80693256806151725247 0.96372224118210370047;-0.94935195977009478874 -1.3592478161543395387 0.11140798351028377566 -1.949895632347017127;0.60670867249365900697 -0.21049171287779522288 -0.55223355764025727765 1.3111352361131602962;0.93709706749508880907 1.3404585474704138193 1.6583066271523432267 0.72360405854659282099;-1.3142718287639529873 1.4220443381757363888 -0.65996648318526784927 0.52799383087534523806;-0.89967484928675456324 0.65855752945528944764 1.2409569684922159283 -0.52423490854456911148;-0.50195828705447076423 -1.022131198849714151 -1.308163476846592399 -1.5797269249728200791;-0.36815802933813174258 2.2176943128804200711 -1.1224084661116919825 0.057129845010838925523];

% Layer 2
b2 = [1.6907554755963032367;-1.2343009936699969042;1.2514785151040996869;0.49420178149742782781;0.29040564371129601318;-0.18488690578665784026;0.50526562254210316549;0.7355386515903997724;-1.4320317517495206872;-1.6909599947053657321];
LW2_1 = [-1.1234217800878918414 -0.0056125965642932814509 -0.48054415185242027597 -0.14582168553630961427 0.31564631190906677904 -0.17710958306909282967 0.82826493537978418402 -0.56652287331597239728 0.22074294351925793922 -0.91677479121177152255;0.67161024060970442306 0.64881564155460269561 -0.72174505696402058152 0.72285038318858818585 0.86840104920254046483 -0.19898617249121525186 -0.66741796989759583081 -0.28492835819584488855 -0.63306680873031262458 -0.027066115868812593015;-0.07066539460984642973 -0.87003497126763007508 0.23343496125383300654 0.62976143888408808724 -0.90414086460283249469 0.093651275462050931342 -0.55068827308846091118 -0.71826390087201064105 -0.44559458606068469422 -0.25003250019116057823;-0.1635697331244101993 -0.8650375332489311786 0.78260320674553840448 0.44815806957227966034 0.67225020738903618067 0.82044290695963084659 0.073471537373748785349 -0.81901852907522021408 -0.032811853295619662629 -0.28722077381299460086;-0.019506684104479549841 0.71162807705774389078 -0.082764886070895937742 -0.035644849857205972155 0.92212744570178595271 0.98360562685997454668 0.39370760107999297484 -0.85703097178452591898 -1.1709695068902123971 -0.44196272833369931732;-0.32315408286465974186 0.46055093829589321963 0.74294676151866423375 0.57029594617235268572 0.070214444999442515716 0.31990336481819409142 0.6387655977134650831 0.51428962393463284464 0.43040705655377270444 0.96791595243678851812;0.25068856700465885767 -0.46408522194911244751 0.7430709718322331403 0.34835076304860279617 0.30241705725195955345 0.19384409141681166466 -0.60254304093424659872 0.050220216107161916308 -0.27706945308312563858 0.78947373124696051949;0.03721702188356298957 0.54924791477123724448 -0.87834109601617327279 -0.71828496472308300813 -0.68930221383431578008 0.43695178124987826829 0.57884314894438182453 0.82279998990980074414 0.96681237013581233786 -0.24716509308483489149;-0.84879080648642712958 0.24993996006590674108 0.34284070603548144618 0.0070890021172959781157 -0.30658070276120291675 -0.65970003818311151456 0.90421624277838785755 0.01438556053524399532 -0.76393407562404980204 0.27949134937042013904;-0.7358520231745270257 0.238355422764329139 -0.89981107549806738088 -0.61357355987034667422 0.54806436631474009236 0.73428546344770773135 0.22367396378322501604 1.1833492317718934395 -0.87240257911779872657 0.062097123726068931271];

% Layer 3
b3 = 0.063138249779489924451;
LW3_2 = [0.66517339008662090816 0.64679295279088067083 -0.40062424964003362504 0.3369559289770897581 -0.97716852809317056305 -0.025988052359046175804 -0.75996186808547205871 -0.19062521565849691041 0.28929779371304076285 -0.93746024946842998471];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
