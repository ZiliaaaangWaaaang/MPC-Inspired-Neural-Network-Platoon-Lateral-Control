function [Y,Xf,Af] = nnmove_07(X,~,~)
%NNMOVE_07 neural network simulation function.
%
% Auto-generated by MATLAB, 18-Jan-2025 09:37:24.
% 
% [Y] = nnmove_07(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.692826738054503;-2.37366072205907;-0.510991349439703;-1.97100986088565];
x1_step1.gain = [1.52856145008017;0.474936694026657;1.8804872999334;0.493456443199078];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.8081560755430068355;-1.6091009686298527459;1.3605655802291689582;-0.18764309669858034169;0.27135616426827385839;0.089630739245560739348;-0.7986705775446653055;1.591997216804510451;2.5998686156891683829;1.8341900156937440691];
IW1_1 = [1.0618918547867419733 0.78487154877139453379 0.93523632996995020861 1.8254036678387115522;1.2180768278345486255 -1.0275320828038094767 -1.1491583549188624236 -1.8687158712315259379;-1.7594199392758815836 0.43226099964139264031 -1.1649793398074768103 0.84575208332678464274;1.4807144461222734311 1.036767932152856897 -0.53878462491375711529 -0.18014235786690210861;-0.32353747538394628247 -2.135794283715715558 -0.7747979899669797943 -0.69573601281626207271;0.9437376229218427115 1.5264597340055723329 0.44304834578402269019 -0.74500581427492540421;-0.74361414496121280848 2.4169367430496677684 -0.65244170471188667193 1.9008380510313058753;0.72735219775689119448 0.24190220305498028042 -0.57638213257696147007 2.2387213284478182374;1.4362999880644093942 0.67244281337203559712 1.1074982762368581479 -0.735413793037139496;0.15005469480631042356 -0.67790818304556332841 2.7073579660990456652 0.57597175041876458312];

% Layer 2
b2 = [1.8287412165216236914;-1.5710470696568710203;-0.91032360870816086962;-0.79717469079100056195;0.091913016282006071433;-0.098742503914511337015;-0.55868286318271087598;-0.92216189561324257706;1.160036505828570208;1.7491590487646238028];
LW2_1 = [-0.8877270512150849946 -0.71311734959402350853 -0.27793199949650060354 -6.0781581208702029073e-06 0.45694148952471247416 -0.69754171567948275445 -0.74728820045364630076 -0.54364497607298434279 -0.45542150076116011403 0.30199538201366760148;0.25644516665019861934 -0.73642971176523852606 0.42006633319985525743 -0.30271688653178152606 -0.30894463786859149845 -0.82812631073307219065 -0.18974208582847443272 -0.53055766412771621088 -0.18791146484680915085 -1.0990183928844339256;0.54742988528480507338 -0.7726353847946072495 0.24628979205145443143 0.0092696471360842330744 -1.358451539148344045 0.9010596531319992053 0.59938625529529865332 0.22663552569538791825 0.80006535171627990444 0.97901936938913203257;0.21361568577298886695 0.57414736904008745189 -0.89202050583871272948 0.17851476891838932715 0.034778267978722708642 0.64951057102784470754 0.38446784558505930907 0.57734555700306844361 -0.44020569501147815972 -1.1073703127294300952;0.10791944397624048113 0.36263378498800874494 -0.34486047842317435475 0.87830576352863942713 -0.40520187593523804281 0.25806503488934473545 -0.78003055593185732786 -0.88152838104190023305 -0.34487441812898378402 -1.1950105378562063674;-0.30804834240931044942 0.50867471658524021638 0.64036502197317402008 0.7014506430505672574 0.79461856271324149414 -0.097303939327478744525 0.72046691641983195975 -0.69860210490065344224 -0.12561463013536067201 1.1542155348595846132;-0.25246233776159343609 -0.86750088567966010533 0.27529872325096749197 0.076408575665242700614 0.27950843638818173575 -0.2796113627807608748 0.79768719060381831909 -0.57877271185945722287 -0.83948217474925956871 0.12251871697003685613;-0.04066074123008148189 0.038630052764956138156 -0.064859164676714500808 -0.040694959150441772922 -0.76621020178709364767 -0.32762702726127373998 -0.19353073166693768314 -0.12211134011347363204 0.36200286830701056129 0.29482691922651260708;0.2782111049083157428 0.27636163998924206942 0.56392624094885723807 0.40066182798840654922 -0.015127729434953100796 0.37672909926478298503 1.5210742247975368446 -0.84045155684759131898 -0.29759326255468182554 0.66488463275030706967;1.099987352161528209 1.1495194791176868154 0.53488287880085094717 0.28569414815179267064 -1.3528296534159240938 0.27946945533039035947 0.22735443163772051101 0.074967426925102526036 -0.076317562674575095683 -0.31111168938412231411];

% Layer 3
b3 = -0.60005154693078066597;
LW3_2 = [-0.55535248763876743361 -0.29038828883004830228 -0.28649700318026855017 -0.54088737796376207267 0.30840799839391924708 0.14329111184820103597 -0.09292315320340496787 -1.4956549524077527025 0.106919051962500955 -0.32401557239078093708];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.25;
y1_step1.xoffset = -0.8;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
